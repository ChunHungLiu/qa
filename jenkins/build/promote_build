#!/usr/bin/env python

import os
import os.path
import sys
import urllib


def post(post_url, body):
    print 'Posting: %(post_url)s, %(body)s.' % locals()
    url = urllib.urlopen(post_url, body)
    try:
        url.readlines()
    finally:
        url.close()


def get(get_url):
    print 'Getting %(get_url)s.' % locals()
    url = urllib.urlopen(get_url)
    try:
        return url.read()
    finally:
        url.close()


def make_jenkins_configure_body(displayName, description):
    json = (
        '{"displayName":"%(displayName)s","description":"%(description)s"}' %
        locals())
    Submit = 'Save'
    return urllib.urlencode(locals())


promoted_url = os.getenv('PROMOTED_URL')
job_name = os.getenv('JOB_NAME')
reason = os.getenv('Reason')
version_number = os.getenv('Version number')

print "PROMOTED URL:", promoted_url
print "JOB_NAME:", job_name
print "Reason:", reason
print "Version number:", version_number

thisdir = os.path.dirname(sys.argv[0])

branch = 'openstack/trunk'

config_api_url = '%(promoted_url)sapi/python' % locals()

params = eval(get(config_api_url))
print "Job parameters are:", params

displayName = params['fullDisplayName'].split(' ', 2)[1]

promo = job_name.split('/')[-1]

if reason is not None:
    config_submit_url = '%(promoted_url)sconfigSubmit' % locals()
    post(config_submit_url, make_jenkins_configure_body(displayName, reason))

if version_number is not None: 
    config_submit_url = '%(promoted_url)sconfigSubmit' % locals()
    v = 'Version %(version_number)s' % locals()
    post(config_submit_url, make_jenkins_configure_body(displayName, v))
    promo = 'release-%(version_number)s' % locals()

link_build = ("%(thisdir)s/link_build '%(branch)s' '%(displayName)s' "
              "'%(promo)s'" %
              locals())
print "Executing %(link_build)s" % locals()
os.system(link_build)
