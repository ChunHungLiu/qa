#!/usr/bin/env python

from getters import wait_for
import sys, argparse

parser = argparse.ArgumentParser(description='Lock a server pair')
parser.add_argument('pool', nargs='?', help='The pool to lock from', default="")
parser.add_argument('--reason', dest='reason', 
                   help='Reason for the lock (optional)')

args = parser.parse_args()

pool = args.pool
def first_pair_where_vlans_match():
    """
    >>> database = []
    >>> tgen = first_pair_where_vlans_match()
    >>> callables = [tgen(i) for i in database]
    >>> [i() for i in callables]
    []
    >>> database = [dict(VLAN=1), dict(VLAN=2)]
    >>> tgen = first_pair_where_vlans_match()
    >>> callables = [tgen(i) for i in database]
    >>> [i() for i in callables]
    [False, False]
    >>> database = [dict(VLAN=1), dict(VLAN=2), dict(VLAN=2)]
    >>> tgen = first_pair_where_vlans_match()
    >>> callables = [tgen(i) for i in database]
    >>> [i() for i in callables]
    [False, True, True]
    >>> database = [dict(VLAN=1)]
    >>> tgen = first_pair_where_vlans_match()
    >>> callables = [tgen(i) for i in database]
    >>> [i() for i in callables]
    [False]
    """
    accumulator = []

    def get_indexes_of_first_pair():
        servers_by_vlans = dict()
        for idx, server in enumerate(accumulator):
            if server.get('POOL', "") != pool:
                continue
            try:
                my_vlan = server['VLAN']
                if my_vlan in servers_by_vlans:
                    return [idx, servers_by_vlans[my_vlan]]
                servers_by_vlans[my_vlan] = idx
            except:
                pass
        return []

    def term_generator(item):
        item_index = len(accumulator)
        accumulator.append(item)
        return lambda: item_index in get_indexes_of_first_pair()

    return term_generator

items, lock = wait_for(first_pair_where_vlans_match, args.reason)

for idx, server in enumerate(items):
    for key, value in server.items():
        print "%s%s=%s" % (key, idx, value)

print "LOCK=%s" % lock
